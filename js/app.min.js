let card=document.getElementsByClassName("card");let cards=Array.from(card);const deck=document.getElementById("card-deck");let moves=0;let counter=document.querySelector(".moves");let startedGame=false;let matchedCard=document.getElementsByClassName("match");let openedCards=[];let lastMatchedNote={};let leaderBoardByTime={};let gameLevel;let id=0;let closeicon=document.querySelector(".close");let modal=document.getElementById("popup1");document.body.onload=startGame();function startGame(){cards=shuffle(cards);for(let i=0;i<cards.length;i++){deck.innerHTML="";[].forEach.call(cards,function(a){deck.appendChild(a)});cards[i].classList.remove("show","open","match","disabled")}moves=0;counter.innerHTML=moves;second=0;minute=0;hour=0;let timer=document.querySelector(".timer");timer.innerHTML="0 mins 0 secs";clearInterval(interval)}function shuffle(a){let currentIndex=a.length,temporaryValue,randomIndex;while(currentIndex!==0){randomIndex=Math.floor(Math.random()*currentIndex);currentIndex-=1;temporaryValue=a[currentIndex];a[currentIndex]=a[randomIndex];a[randomIndex]=temporaryValue}return a}let displayCard=function(){if(!startedGame){startTimer()}this.classList.toggle("open");this.classList.toggle("show");this.classList.toggle("disabled")};function cardOpen(){openedCards.push(this);let len=openedCards.length;if(len===2){moveCounter();if(openedCards[0].type===openedCards[1].type){lastMatchedNote=openedCards[0].type;matched()}else{unmatched()}}}function matched(){openedCards[0].classList.add("match","disabled");openedCards[1].classList.add("match","disabled");openedCards[0].classList.remove("show","open","no-event");openedCards[1].classList.remove("show","open","no-event");openedCards=[];if(matchedCard.length<16){showNoteModal()}}function unmatched(){openedCards[0].classList.add("unmatched");openedCards[1].classList.add("unmatched");disable();setTimeout(function(){openedCards[0].classList.remove("show","open","no-event","unmatched");openedCards[1].classList.remove("show","open","no-event","unmatched");enable();openedCards=[]},1100)}function disable(){Array.prototype.filter.call(cards,function(a){a.classList.add("disabled")})}function enable(){Array.prototype.filter.call(cards,function(a){a.classList.remove("disabled");for(let i=0;i<matchedCard.length;i++){matchedCard[i].classList.add("disabled")}})}function moveCounter(){moves++;counter.innerHTML=moves;if(moves===1){second=0;minute=0;hour=0}}var second=0,minute=0;hour=0;var timer=document.querySelector(".timer");var interval;function startTimer(){startedGame=true;interval=setInterval(function(){timer.innerHTML=minute+" mins "+second+" secs";second++;if(second===60){minute++;second=0}if(minute===60){hour++;minute=0}},1000)}function showNoteModal(){$("#popup3").addClass("show");document.getElementById("lastNote").innerHTML=lastMatchedNote.toString().toUpperCase()}function closeNoteModal(){$("#popup3").removeClass("show")}function playLastMatchedNote(){console.log(lastMatchedNote);play(lastMatchedNote)}function congratulations(){let finalTime;if(matchedCard.length===16){clearInterval(interval);finalTime=timer.innerHTML;modal.classList.add("show");postToMongo($("#name").val(),moves,finalTime,gameLevel);getCollectionFromMongo();document.getElementById("gamerName").innerHTML=$("#name").val();document.getElementById("finalMove").innerHTML=moves;document.getElementById("totalTime").innerHTML=finalTime;document.getElementById("level").innerHTML=gameLevel;closeModal()}}function closeModal(){closeicon.addEventListener("click",function(a){modal.classList.remove("show");startGame()})}function playAgain(){modal.classList.remove("show");startGame()}function play(a){let piano=Synth.createInstrument("piano");switch(a){case"do":piano.play("C",4,2);break;case"re":piano.play("D",4,2);break;case"mi":piano.play("E",4,2);break;case"fa":piano.play("F",4,2);break;case"sol":piano.play("G",4,2);break;case"la":piano.play("A",4,2);break;case"si":piano.play("B",4,2);break;case"do_high":piano.play("C",5,2);break}}function playSound(){play(this.type)}for(var i=0;i<cards.length;i++){card=cards[i];card.addEventListener("click",displayCard);card.addEventListener("click",cardOpen);card.addEventListener("click",congratulations);card.addEventListener("click",playSound)}$(".btn-group .btn").on("click",function(){if($(this).val()==="easy"){$(".btn-group .btn").css("font-weight","normal");$(this).css("font-weight","bold");$(".card .fa").show();gameLevel="Easy"}else{$(".btn-group .btn").css("font-weight","normal");$(this).css("font-weight","bold");$(".card .fa").hide();gameLevel="Hard"}});$(function(){$("#startGameBTN").on("click",function(){$("#popup2").removeClass("show")})});function postToMongo(c,b,a,d){$.ajax({url:"https://api.mlab.com/api/1/databases/heroku_wnjdhw5n/collections/games_stats?apiKey=k_bMgbyw5w3iv9msEbm_H9gncX747FjQ",data:JSON.stringify({gamerName:c,finalMove:b,totalTime:a,level:d}),type:"POST",contentType:"application/json"})}var transform={tag:"tr",children:[{tag:"td",html:function(){return ++id}},{tag:"td",html:"${gamerName}"},{tag:"td",html:"${finalMove}"},{tag:"td",html:"${totalTime}"},{tag:"td",html:"${level}"}]};function getCollectionFromMongo(){$.ajax({url:"https://api.mlab.com/api/1/databases/heroku_wnjdhw5n/collections/games_stats?apiKey=k_bMgbyw5w3iv9msEbm_H9gncX747FjQ",type:"GET",contentType:"application/json",success:function(a){leaderBoardByTime=(_.sortBy(a,"finalMove").slice(0,10));$("#leaderboard > tbody").json2html(leaderBoardByTime,transform)}})};